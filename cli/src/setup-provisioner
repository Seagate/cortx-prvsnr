#!/bin/bash

set -eu

SCRIPT_PATH=$(readlink -f "$0")
BASEDIR=$(dirname "$SCRIPT_PATH")
INSTALLDIR="/opt/seagate/eos-prvsnr"
EES_PRVSNR_REPO_API_TAGS='http://gitlab.mero.colo.seagate.com/api/v4/projects/eos%2Fprovisioner%2Fees-prvsnr/repository/tags?order_by=updated&sort=desc'

eosnode_2_hostspec=eosnode-2

salt_master_hostname=
prvsnr_repo_src=gitlab

prvsnr_version=

. $BASEDIR/functions.sh

function usage {
  echo "\
Usage: $0 [options] [ees-prvsnr-version]

Installs the provisioner repository along with SaltStack
on the hosts with bare OS installed, configures salt master/minion
connections and makes some additional preliminary configuration.

'ees-prvsnr-version' as an optional positional argument might specify
the desired version of the provisioner to install. Makes sense for 'gitlab'
source only as of now. Not set by default.

General options:
$base_options_usage

Options:
       --eosnode-2=[user@]hostname      eosnode-2 host specification,
                                         default: $eosnode_2_hostspec
       --repo-src={local|gitlab|rpm}    the source for provisioner repo installation,
                                         default: $prvsnr_repo_src
       --salt-master=HOSTNAME           domain name or IP of the salt master
                                         default: not specified
"
}

# TODO
# - dry-run support
# - echos for progress and verbosity levels support


# TODO tests
function options_parser {
    set -eu

    case "$1" in
        --eosnode-2)
            eosnode_2_hostspec="$2"
            ;;
        --repo-src)
            case "$2" in
                local|gitlab|rpm)
                    prvsnr_repo_src="$2"
                    ;;
                *)
                    >&2 echo "Incorrect repo source: $1"
                    usage
                    exit 5
            esac
            ;;
        --salt-master)
            salt_master_hostname="$2"
            ;;
        *)
            >&2 echo "Unknown option: $1"
            exit 5
    esac
}


# TODO update tests
function positional_args_parser {
    set -eu

    if [[ $# -gt 1 ]]; then
        >&2 echo "$0: Only one positional argument is expected, provided: $@"
        exit 2
    fi

    prvsnr_version="${1:-}"
}


parse_args '' 'eosnode-2:,repo-src:,salt-master:' options_parser positional_args_parser "$@"

# check eosnode-1/eosnode-2 occurence in ssh-config

if [[ -n "$hostspec" ]]; then
    if [[ -z "$ssh_config" || -z "$(check_host_in_ssh_config "$hostspec" "$ssh_config")" ]]; then
        >&2 echo "eosnode-1 node ssh configuration is not found in ssh-config ($ssh_config)"
        exit 1
    fi
fi


if [[ "$singlenode" == false ]]; then
    if [[ -z "$ssh_config" || -z "$(check_host_in_ssh_config "$eosnode_2_hostspec" "$ssh_config")" ]]; then
        >&2 echo "eosnode-2 node ssh configuration is not found in ssh-config ($ssh_config)"
        exit 1
    fi
fi


if [[ -z "$prvsnr_version" ]]; then
    if [[ "$prvsnr_repo_src" == "gitlab" || "$prvsnr_repo_src" == "rpm" ]]; then
        # get latest version of provisioner
        ! _tags=$(curl "$EES_PRVSNR_REPO_API_TAGS")
        prvsnr_version=$(echo "$_tags" | tr ',' '\n' | sed -n 's/.*"name":"\(.\+\)".*/\1/p' | head -n1)
    fi
fi

# TODO rpm case for now doesn't support selection per version, only latest one
if [[ -z "$prvsnr_version" && "$prvsnr_repo_src" != "local" && "$prvsnr_repo_src" != "rpm" ]]; then
    >&2 echo 'ERROR: provisioner repo version is unknown'
    exit 1
fi

cluster_mode=""
if [[ "$singlenode" == true ]]; then
  cluster_mode="singlenode"
else
  cluster_mode="ees"
fi

# setup eosnode-1
install_salt "$hostspec" "$ssh_config" "$sudo"
install_provisioner "$prvsnr_repo_src" "$prvsnr_version" "$hostspec" "$ssh_config" "$sudo" "$INSTALLDIR" "$cluster_mode"
configure_salt eosnode-1 "$hostspec" "$ssh_config" "$sudo" true localhost "$INSTALLDIR"
accept_salt_keys eosnode-1 "$hostspec" "$ssh_config" "$sudo"
# TODO use salt formulas instead
# disabled, http://gitlab.mero.colo.seagate.com/eos/provisioner/ees-prvsnr/issues/21
# configure_network "$hostspec" "$ssh_config" "$sudo" "$INSTALLDIR"

if [[ "$singlenode" != true ]]; then
    install_salt "$eosnode_2_hostspec" "$ssh_config" "$sudo"
    # setup eosnode-2
    install_provisioner "$prvsnr_repo_src" "$prvsnr_version" "$eosnode_2_hostspec" "$ssh_config" "$sudo" "$INSTALLDIR" "$cluster_mode"
    configure_salt eosnode-2 "$eosnode_2_hostspec" "$ssh_config" "$sudo" false "$salt_master_hostname" "$INSTALLDIR"
    accept_salt_keys eosnode-2 "$hostspec" "$ssh_config" "$sudo"
    # TODO use salt formulas instead
    # disabled, http://gitlab.mero.colo.seagate.com/eos/provisioner/ees-prvsnr/issues/21
    # configure_network "$eosnode_2_hostspec" "$ssh_config" "$sudo" "$INSTALLDIR"
fi

cmd="$(build_command "$hostspec" "$ssh_config" "$sudo")"
target_minions='*'
if [[ -n "$hostspec" ]]; then
    target_minions="'*'"
fi

if [[ "$singlenode" != true ]]; then
  # TODO test that
  # force salt to mine data
  $cmd salt "$target_minions" mine.update
fi

echo "Done"
