#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#


set -euE

export LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/storage_metadata_reset.log}"
mkdir -p $(dirname "${LOG_FILE}")
# truncate -s 0 ${LOG_FILE}

BASEDIR=$(dirname "${BASH_SOURCE}")
. ${BASEDIR}/../common_utils/utility_scripts.sh

function trap_handler {
    echo "***** ERROR! *****"
    echo "For detailed error logs, please see: $LOG_FILE"
    echo "******************"
}
trap trap_handler ERR


function user_confirmation {
    _linfo "*****************************************************************"
    _linfo "***************************  WARNING  ***************************"
    _linfo "*****************************************************************"
    echo -e "" 2>&1 | tee -a ${LOG_FILE}
    echo -e "##  You are about to wipeout ALL data on storage." 2>&1 | tee -a ${LOG_FILE}
    echo -e "##  You acknowledge that you understand, what you are about to do." 2>&1 | tee -a ${LOG_FILE}
    echo -e "" 2>&1 | tee -a ${LOG_FILE}
    echo -e "##  Acknowledgement:" 2>&1 | tee -a ${LOG_FILE}
    echo -e ""
    echo -e "##    You are about to wipeout ALL data on storage." 2>&1 | tee -a ${LOG_FILE}
    echo -n "##    Proceed (y/n)? " 2>&1 | tee -a ${LOG_FILE}
    read answer
    echo -e "##       Answer: ${answer}" >> ${LOG_FILE}
    echo -e ""
    _linfo "*****************************************************************"

    if [ "$answer" == "${answer#[Yy]}" ] ;then
        _linfo "User has decided to abort. Good decision..."
        _linfo "*****************************************************************"
        exit 10
    else
        _linfo "User has decided to proceed with data destruction."
    fi
    _linfo "*****************************************************************"
}

function trigger_hare_reset {
    _linfo "*****************************************************************"
    _linfo "Starting metadata reset using Hare utility: hare-m0reset."
    _linfo "*****************************************************************"
    
    /opt/seagate/cortx/ha/conf/script/prov-m0-reset \
        /var/lib/hare/cluster.yaml \
        /opt/seagate/cortx/iostack-ha/conf/build-ha-args.yaml 2>&1 | tee -a ${LOG_FILE} || (
        _lerror "Script *hare-m0reset* failed to execute. Check log file: ${LOG_FILE}"
    )

    _linfo "Metadata reset operation complete."
    _linfo "*****************************************************************"
}

function trigger_s3_cleanup {

    _linfo "*****************************************************************"
    _linfo "Executing script: /opt/seagate/cortx/s3/reset/reset_s3.sh"
    _linfo "*****************************************************************"

    if [[ -f "/opt/seagate/cortx/s3/reset/reset_s3.sh" ]]; then
        sh /opt/seagate/cortx/s3/reset/reset_s3.sh --check-motr-cleanup --cleanup-rabbitmq 2>&1 | tee -a ${LOG_FILE}|| (
            _lerror "Script */opt/seagate/cortx/s3/reset/reset_s3.sh* failed to execute. Check log file: ${LOG_FILE}"
        )
    else
        _lerror "S3 reset script not found."
    fi

    _linfo "*****************************************************************"
}

#EOS-9693: no need to check if cluster is healthy during reset.
#ensure_healthy_cluster

user_confirmation
trigger_hare_reset
ensure_healthy_cluster
trigger_s3_cleanup

_linfo "*****************************************************************"
_linfo "Done! The metadata has been completely erased."
_linfo "Cluster is ready for use..."
_linfo "Detailed logs available at: "
_linfo "        ${LOG_FILE}"
_linfo "*****************************************************************"
_linfo ""
_linfo ""
