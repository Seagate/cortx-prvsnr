apiVersion: v1
kind: Pod
metadata:
  name: storage-node2
  labels:
    app: storage-node2
spec:
  hostname: storage-node2
  restartPolicy: Never
  nodeSelector:
    node-name: node2
  volumes:
  - name: solution-config
    configMap:
      name: solution-config
  - name: etc-cortx
    persistentVolumeClaim:
      claimName: etc-cortx
  - name: var-data-cortx
    persistentVolumeClaim:
      claimName: var-data-cortx
  - name: var-log-cortx
    persistentVolumeClaim:
      claimName: var-log-cortx
  - name: sdb
    persistentVolumeClaim:
      claimName: dev-sdb-node2
  - name: sdc
    persistentVolumeClaim:
      claimName: dev-sdc-node2
  - name: sdd
    persistentVolumeClaim:
      claimName: dev-sdd-node2
  - name: sdf
    persistentVolumeClaim:
      claimName: dev-sdf-node2
  - name: sdg
    persistentVolumeClaim:
      claimName: dev-sdg-node2
  - name: sdh
    persistentVolumeClaim:
      claimName: dev-sdh-node2
  - name: sdi
    persistentVolumeClaim:
      claimName: dev-sdi-node2
  - name: sdj
    persistentVolumeClaim:
      claimName: dev-sdj-node2
  containers:
  - name: cortx-data
    image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
    imagePullPolicy: IfNotPresent
    args:
    - /bin/sh
    - -c
    - set -x;
      export PATH=$PATH:/opt/seagate/cortx/provisioner/bin;
      cortx_setup --help;
      while true; do sleep 30; echo "Hello Kubernetes"; done;
    volumeMounts:
    - name: solution-config
      mountPath: /etc/cortx/solution
    - name: etc-cortx
      mountPath: /etc/cortx
    - name: var-data-cortx
      mountPath: /var/data/cortx
    - name: var-log-cortx
      mountPath: /var/log/cortx
    volumeDevices:
    - name: sdb
      devicePath: /dev/sdb
    - name: sdc
      devicePath: /dev/sdc
    - name: sdd
      devicePath: /dev/sdd
    - name: sdf
      devicePath: /dev/sdf
    - name: sdg
      devicePath: /dev/sdg
    - name: sdh
      devicePath: /dev/sdh
    - name: sdi
      devicePath: /dev/sdi
    - name: sdj
      devicePath: /dev/sdj
