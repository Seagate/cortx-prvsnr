#!/usr/bin/bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#


set -euE

export LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/unboxing_nw_commons.log}"
mkdir -p $(dirname "${LOG_FILE}")
#truncate -s 0 ${LOG_FILE}

export PRVSNR_ROOT="/opt/seagate/cortx/provisioner"
export SALT_OPTS="--no-color --out-file=${LOG_FILE} --out-file-append"

export pvt_ip_a=$(get_pillar_data cluster:srvnode-1:network:data_nw:pvt_ip_addr)
export pvt_ip_b=$(get_pillar_data cluster:srvnode-2:network:data_nw:pvt_ip_addr)

export remotes=(
    ${pvt_ip_a}
    ${pvt_ip_b}
)


function trap_handler {
    exit_code=$?

    echo "*************** ERROR! ***************" | tee -a ${LOG_FILE}
    echo "For detailed error logs, please see: $LOG_FILE" | tee -a ${LOG_FILE}
    echo "**************************************" | tee -a ${LOG_FILE}
    
    # exit $exit_code
}
trap trap_handler ERR


function intrpt_handler {
    exit_code=$?

    echo "*************** ERROR! ***************" | tee -a ${LOG_FILE}
    echo "------------------------------------------------------------------" | tee -a ${LOG_FILE}
    echo "Received Ctrl-c signal, exiting Gracefully. | tee -a ${LOG_FILE}
    echo "For detailed logs, please see: $LOG_FILE | tee -a ${LOG_FILE}
    echo "------------------------------------------------------------------" | tee -a ${LOG_FILE}
    echo "**************************************" | tee -a ${LOG_FILE}

    # exit $exit_code
}
trap intrpt_handler SIGTERM SIGINT


function backup_ifcfg {
    node=${1:-pvt_ip_a}
    if_name=${2:-eno1}

    if [[ -n if_name ]]; then
        if [[ ! $(remote_execute ${node} "test -e /etc/sysconfig/network-scripts/ifcfg-${if_name}.boxing" >/dev/null 2>&1) ]]; then
            _linfo "Backing up ifcfg-${if_name} to ifcfg-${if_name}.boxing in dir /etc/sysconfig/network-scripts"
            remote_execute ${node} "mv /etc/sysconfig/network-scripts/ifcfg-${if_name} /etc/sysconfig/network-scripts/ifcfg-${if_name}.boxing"
        else
            _lerror "ifcfg-${if_name}.boxing file from previous boxing already exists. Skipping backup..."
        fi
    fi
}
