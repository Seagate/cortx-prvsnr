FROM centos:7.7.1908

# configure docker for systemd: here and CMD at end
ENV container docker
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
        systemd-tmpfiles-setup.service ] || rm -f $i; done); \
        rm -f /lib/systemd/system/multi-user.target.wants/*;\
        rm -f /etc/systemd/system/*.wants/*;\
        rm -f /lib/systemd/system/local-fs.target.wants/*; \
        rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
        rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
        rm -f /lib/systemd/system/basic.target.wants/*;\
        rm -f /lib/systemd/system/anaconda.target.wants/*;
VOLUME [ "/sys/fs/cgroup" ]

#RUN yum install -y epel-release \
#    && yum install -y https://centos7.iuscommunity.org/ius-release.rpm \
#    && yum install -y python36u python36-pip \
#    && rm -rf /var/cache/yum

# set up custom seagate repos plus salt's one
RUN  rm -rf /var/cache/yum \
    && rm -f /etc/yum.repos.d/*
COPY files/etc/yum.repos.d /etc/yum.repos.d/

# install python3.6 and pip
RUN yum install -y python36 python36-pip \
    && rm -rf /var/cache/yum

# install pipenv for easier python venv management
#ENV LC_ALL=en_US.utf8
#ENV LANG=en_US.utf8
#RUN pip3 install pipenv \
#    && pipenv --version

# install salt
RUN yum install -y salt-minion \
    && systemctl disable salt-minion \
    && cp /etc/salt/minion /etc/salt/minion.org \
    && salt-call --version \
    && rm -rf /var/cache/yum

# config salt and set up salt scripts
COPY files/etc/salt/minion_masterless /etc/salt/minion
COPY pillar /opt/seagate/eos-prvsnr/pillar/
COPY srv /opt/seagate/eos-prvsnr/srv/

# TODO should be a part of salt (rsyslog, sudo)
RUN yum install -y net-tools rsyslog sudo \
    && rm -rf /var/cache/yum

RUN sed -i 's/data0/eth0/g' /opt/seagate/eos-prvsnr/pillar/components/cluster.sls \
    && sed -i 's/mgmt0/eth0/g' /opt/seagate/eos-prvsnr/pillar/components/cluster.sls \
    && sed -i 's/sdb/vdb/g' /opt/seagate/eos-prvsnr/pillar/components/cluster.sls \
    && sed -i 's/sdc/vdc/g' /opt/seagate/eos-prvsnr/pillar/components/cluster.sls \
    && cat /opt/seagate/eos-prvsnr/pillar/components/cluster.sls

# ??? is it really necessary
COPY modprobe.sh /usr/local/bin/modprobe

WORKDIR /opt/seagate
CMD ["/usr/sbin/init"]

# TODO
#   - sudo for sspl
#       - visudo, root ALL=(ALL) NOPASSWD:ALL (seems might not be needed)
#   - rsyslog for s3server
#       - s3server apply fails second time even rsyslog already installed
#   -  verify that hostname set formula works in docker (might be not true)
#   - ldap fails (s3server)

# ??? mac-address turns off ping to container

#  docker network create --subnet="172.16.10.0/24" --opt com.docker.network.bridge.name=mgmt0 mgmt0
#  docker network create --subnet="172.19.10.0/24" --opt com.docker.network.bridge.name=data0 data0
#  docker run -tid --mac-address=02:42:31:03:d3:15 --network data0 --ip 172.19.10.101 -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /tmp/$(mktemp -d):/run -v /dev:/dev --cap-add=ALL --privileged --name centos7-eos -h srvnode-1 centos7-eos
#  docker run -tid --mac-address=02:42:b1:0e:7a:0c --network bridge -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /tmp/$(mktemp -d):/run -v /dev:/dev --cap-add=ALL --privileged --name centos7-eos -h srvnode-1 centos7-eos
#  docker run -tid --network host -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /tmp/$(mktemp -d):/run -v /dev:/dev --cap-add=ALL --privileged --name centos7-eos -h srvnode-1 centos7-eos
#  docker network connect mgmt0 centos7-eos --ip 172.16.10.101
#  docker network connect data0 centos7-eos --ip 172.19.10.101
#  docker network connect bridge centos7-eos # for external networks access
#
#  salt-call state.apply components.system
#  ...
#  bash -c 'journalctl -f | grep -E -i "mero|lnet"' &
#
