apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: control-node
  name: control-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: control-node
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: control-node
        cortx.io/machine-id: 9995f539f4f770e2a3fe9e2e615c32a8
    spec:
      hostname: control-node
      nodeSelector:
        node-name: node1
      volumes:
      - name: solution-config
        configMap:
          name: solution-config
      - name: node-id
        configMap:
          name: control-node-id
      - name: shared-node1
        persistentVolumeClaim:
          claimName: shared-node1
      - name: local-node1
        persistentVolumeClaim:
          claimName: local-node1
      - name: cortx-secret
        secret:
          secretName: cortx-secret

      initContainers:
      - name: cortx-setup
        image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
        imagePullPolicy: IfNotPresent
        args:
        - /bin/sh
        - -c
        - set -x;
          /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: node-id
          mountPath: /etc/cortx/solution/node
        - name: local-node1
          mountPath: /etc/cortx
        - name: shared-node1
          mountPath: /share
        - name: cortx-secret
          mountPath: /etc/cortx/solution/secret

      containers:
      - name: cortx-fsm-motr
        image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
        imagePullPolicy: IfNotPresent
        args:
        - /bin/sh
        - -c
        - set -x;
          /opt/seagate/cortx/motr/bin/motr_setup start --services fsm --config yaml:///etc/cortx/cluster.conf;
          sleep infinity;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: node-id
          mountPath: /etc/cortx/solution/node
        - name: shared-node1
          mountPath: /share
        - name: local-node1
          mountPath: /etc/cortx
      - name: cortx-csm-agent
        image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8081
          name: "port-8081"
        args:
        - /bin/sh
        - -c
        - set -x;
          /usr/bin/csm_agent start -c yaml:///etc/cortx/cluster.conf;
          sleep infinity;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: node-id
          mountPath: /etc/cortx/solution/node
        - name: shared-node1
          mountPath: /share
        - name: local-node1
          mountPath: /etc/cortx
      - name: cortx-bg-scheduler
        image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
        imagePullPolicy: IfNotPresent
        args:
        - /bin/sh
        - -c
        - set -x;
          /opt/seagate/cortx/s3/bin/s3_start --service bgscheduler -c yaml:///etc/cortx/cluster.conf;
          while true; do sleep 30; echo "Hello Kubernetes"; done;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: node-id
          mountPath: /etc/cortx/solution/node
        - name: shared-node1
          mountPath: /share
        - name: local-node1
          mountPath: /etc/cortx
      - name: cortx-message-server
        image: ghcr.io/seagate/cortx-all:2.0.0-latest-custom-ci
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 28300
          name: "port-28300"
        args:
        - /bin/sh
        - -c
        - set -x;
          /opt/seagate/cortx/utils/bin/utils_server --config yaml:///etc/cortx/cluster.conf;
          sleep infinity;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: node-id
          mountPath: /etc/cortx/solution/node
        - name: shared-node1
          mountPath: /share
        - name: local-node1
          mountPath: /etc/cortx
