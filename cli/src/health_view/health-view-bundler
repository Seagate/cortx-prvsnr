#!/bin/bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#



set -euE

export LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/health-view-bundle.log}"
mkdir -p $(dirname "${LOG_FILE}")
truncate -s 0 ${LOG_FILE}

function trap_handler {
  echo "For detailed error logs, please see: $LOG_FILE"
}
trap trap_handler ERR

BASEDIR=$(dirname "${BASH_SOURCE}")
. $BASEDIR/../common_utils/functions.sh

BUNDLE_ID=0
DIR_PATH=/tmp

function generate_health_view {
  time_stamp=`date "+%Y%m%d-%H%M%S"`
  health_view_file="cortx_schema_$time_stamp.json"
  health_view_dir=$(salt-call pillar.get sspl:health_map_path --output=newline_values_only)

  l_info "Generating Health View" 2>&1 | tee -a $LOG_FILE

  salt-call state.apply components.sspl.health_view.config.generate 2>&1 | tee -a $LOG_FILE
  mv /tmp/resource_health_view.json $health_view_dir/$health_view_file

  if [[ -z $health_view_dir/$health_view_file ]]; then
      l_error "No Health View generated."
      exit 1
  fi

  l_info "Generated Health View at: $health_view_dir" 2>&1 | tee -a $LOG_FILE
}

function bundle_health_view {
  if [[ $# -gt 2 ]]; then
      l_error "$0: Only 2 positional arguments are expected, provided: $@"
      exit 2
  fi

  BUNDLE_ID="${1:-0}"
  DIR_PATH="${2:-/tmp}"

  health_view_path=${DIR_PATH}/health_view
  health_view_bundle=health_view_$BUNDLE_ID.tar.gz

  mkdir -p $health_view_path

  l_info "Preparing Health View bundle" 2>&1 | tee -a $LOG_FILE

  health_view_dir=$(salt-call pillar.get sspl:health_map_path --output=newline_values_only)
  
  pushd $health_view_path
    tar -C $health_view_dir -czvf $health_view_path/$health_view_bundle ./
  popd
  
  l_info "Health View bundle can be found at $health_view_path/$health_view_bundle" 2>&1 | tee -a $LOG_FILE
}

generate_health_view
bundle_health_view "$@"

l_info "DONE"
