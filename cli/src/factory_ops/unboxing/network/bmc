#!/usr/bin/bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#


set -euE
export NETWORK_BMC=1

LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/unboxing_nw_bmc.log}"
mkdir -p $(dirname "${LOG_FILE}")
#truncate -s 0 ${LOG_FILE}

PRVSNR_ROOT="/opt/seagate/cortx/provisioner"
SALT_OPTS="--no-color --out-file=${LOG_FILE} --out-file-append"

pvt_ip_a=$(get_pillar_data cluster:srvnode-1:network:data_nw:pvt_ip_addr)
pvt_ip_b=$(get_pillar_data cluster:srvnode-2:network:data_nw:pvt_ip_addr)

remotes=(
    ${pvt_ip_a}
    ${pvt_ip_b}
)

# Set BMC dhcp network configs
function set_bmc_dhcp_config {
    _linfo "================================================================================"
    _linfo "Setting BMC network information to DHCP on both nodes"
    _linfo "================================================================================"
    _linfo "    "
    _linfo "You have selected to proceed with DHCP based configuration for management network interface."
    _linfo "    "
    proceed_check
    _linfo "    "


    for remote in ${remotes[@]}; do
        _linfo "Setting BMC Network Information for DHCP on ${remote}"

        ssh_over_pvt_data ${remote} "ipmitool lan set 1 ipsrc dhcp"
        ssh_over_pvt_data ${remote} "ipmitool lan set 1 access on"
        _linfo "Sleeping for 30 secs for the settings to take effect"
        ssh_over_pvt_data ${remote} "sleep 30"

        if [[ ${remote} == ${pvt_ip_a} ]]; then
            srvnode=srvnode-A
        elif [[ ${remote} == ${pvt_ip_b} ]]; then
            srvnode=srvnode-B
        else
            # This should never be hit
            _lerror "This should never be seen. If you see this, there is something unexpected heppening."
            exit 23
        fi

        _linfo "********************************************************************************"
        _linfo "BMC LAN settings on ${srvnode} have been updated to: "
        _linfo "********************************************************************************"
        ssh_over_pvt_data ${remote} "ipmitool lan print 1" | tee -a ${LOG_FILE}
        _linfo "********************************************************************************"
    done

    _linfo "================================================================================"
    _linfo "        "
}


# Set BMC static network configs
function set_bmc_static_config {

    _linfo "================================================================================"
    _linfo "Setting BMC Network Information for Static IP"
    _linfo "================================================================================"
    
    read -p "BMC IP for Server-A: " bmc_srv_1
    read -p "BMC IP for Server-B: " bmc_srv_2
    read -p "Gateway IP for BMC interfaces on both nodes: " gw_ip
    read -p "Netmask for BMC network on both servers [255.255.252.0]: " netmask
    [[ -z ${netmask} ]] && netmask=255.255.252.0

    _linfo "********************************************************************************"
    _linfo "You have provided the following information:"
    _linfo "    BMC IP for Server-A:                            ${mgmt_ip_1}"
    _linfo "    BMC IP for Server-B:                            ${mgmt_ip_2}"
    _linfo "    Gateway IP for BMC interfaces on both nodes:    ${gw_ip}"
    _linfo "    Netmask for BMC network on both servers:        ${netmask}"
    _linfo "********************************************************************************"
    _linfo "    "
    _linfo "Given the above information,
    the process shall proceed with Static IP based NW configuration for BMC interfaces"
    _linfo "    "
    proceed_check    
    
    local node_name=null
    for remote in ${remotes[@]}; do
        _linfo "Setting BMC Network Information for Static IP on ${remote}"
        ssh_over_pvt_data ${remote} "ipmitool lan set 1 ipsrc static"
        
        if [[ (${remote} == ${pvt_ip_a}) && (-n ${bmc_srv_1}) ]]; then
            # BMC settings update for node-1
            node_name=srvnode-A
            ssh_over_pvt_data ${remote} "ipmitool lan set 1 ipaddr ${bmc_srv_1}"
        elif [[ (${remote} == ${pvt_ip_b}) && (-n ${bmc_srv_2}) ]]; then
            # BMC settings update for node-2
            node_name=srvnode-B
            ssh_over_pvt_data ${remote} "ipmitool lan set 1 ipaddr ${bmc_srv_2}"
        else
            # Do nothing
            :
        fi

        ssh_over_pvt_data ${remote} "ipmitool lan set 1 defgw ipaddr ${gw_ip}"
        ssh_over_pvt_data ${remote} "ipmitool lan set 1 netmask ${netmask}"
        # ipmitool lan set 1 arp respond on
        ssh_over_pvt_data ${remote} "ipmitool lan set 1 access on"

        _linfo "Sleeping for 30 secs for the settings to take effect"
        ssh_over_pvt_data ${remote} "sleep 30"

        _linfo "********************************************************************************"
        _linfo "BMC LAN settings on ${node_name} have been updated to: "
        _linfo "********************************************************************************"
        ssh_over_pvt_data ${remote} "ipmitool lan print 1" | tee -a ${LOG_FILE}
        _linfo "********************************************************************************"
        
    done

    _linfo "================================================================================"
    _linfo "        "

    proceed_check
}
