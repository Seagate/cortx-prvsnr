#!/bin/sh
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#


set -euE

export LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/boxing.log}"
mkdir -p $(dirname "${LOG_FILE}")

function trap_handler {
    echo "***** ERROR! *****"
    echo "For detailed error logs, please see: $LOG_FILE"
    echo "******************"
}
trap trap_handler ERR

BASEDIR=$(dirname "${BASH_SOURCE}")

. ${BASEDIR}/../../common_utils/utility_scripts.sh
. $BASEDIR/prov_tasks
. $BASEDIR/shutdown

# Check if Boxing flag file is present
box_flag_file="/opt/seagate/cortx/provisioner/generated_config/boxed"
if [[ -f $box_flag_file ]]; then
    echo "INFO: Boxing script already run, printing system details required for unboxing" | tee -a ${LOG_FILE}
    create_unboxing_user
    exit 0
fi

# Prepare shutdown
ensure_healthy_cluster

# Shutdown HA
if command -v pcs ; then
    echo "INFO: Starting Cortx cluster in maintenance mode..." 2>&1 | tee -a ${LOG_FILE}
    hctl node maintenance --all --timeout-sec=600 2>&1 | tee -a ${LOG_FILE}
    echo "INFO: Initiating HA cluster stop..." 2>&1 | tee -a ${LOG_FILE}
    pcs cluster stop --all  2>&1 | tee -a ${LOG_FILE}
else
    echo "[ERROR    ]: Command 'pcs' not found" 2>&1 | tee -a ${LOG_FILE}
fi

# Set remote root login only through private ips
#update_ssh_settings

# Provisioner tasks
#stop_rabbitmq_cluster #This is taken care for now by having internalhostnames
stop_services
reset_pub_data_ips
seagate_refs_cleanup
backup_files

# Create user for unboxing
create_unboxing_user

# Create flag file
boxing_flag $box_flag_file

# Power-off sequence
#shutdown_controller
shutdown_node
