#!/usr/bin/bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#



# Functions in this file address following:
#   1.  Accept user choice: DHCP/Static
#   2.  If DHCP
#       2.1.  Set cluster entries for public management IP to None
#       2.2.  Update /etc/resolv.conf using dhclient
#   3.  If Static
#       3.1.  IP address for public management interface (E.g. for eno1) <Mandatory>:
#             for srvnode-1 & srvnode-2
#       3.2.  Gateway for management network <Mandatory>
#       3.3.  BMC IP <Mandatory>
#             for srvnode-1 & srvnode-2
#   4.  Gateway for Public Data network [Optional]
#   5.  Present User with captured information for confirmation
#   6.  Backup exiting ifcfg file with extension .boxing
#   7.  Apply configuration and restart interface
#   8.  Test connectivity with a ping


set -euE

BASEDIR=$(dirname "${BASH_SOURCE}")
. ${BASEDIR}/../../common_utils/utility_scripts.sh
. ${BASEDIR}/network/bmc
. ${BASEDIR}/network/public_mgmt
. ${BASEDIR}/network/public_data

LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/unboxing_nw_update.log}"
mkdir -p $(dirname "${LOG_FILE}")
#truncate -s 0 ${LOG_FILE}


function trap_handler {
    exit_code=$?

    echo "*************** ERROR! ***************" | tee -a ${LOG_FILE}
    echo "For detailed error logs, please see: $LOG_FILE" | tee -a ${LOG_FILE}
    echo "**************************************" | tee -a ${LOG_FILE}
    
    # exit $exit_code
}
trap trap_handler ERR


function intrpt_handler {
    exit_code=$?

    echo "*************** ERROR! ***************" | tee -a ${LOG_FILE}
    echo "------------------------------------------------------------------" | tee -a ${LOG_FILE}
    echo "Received Ctrl-c signal, exiting Gracefully. | tee -a ${LOG_FILE}
    echo "For detailed logs, please see: $LOG_FILE | tee -a ${LOG_FILE}
    echo "------------------------------------------------------------------" | tee -a ${LOG_FILE}
    echo "**************************************" | tee -a ${LOG_FILE}

    exit $exit_code
}
trap intrpt_handler SIGTERM SIGINT


# 1.  Accept user choice: DHCP/Static
# Prompt user to choose between DHCP and static
function choose_nw_config {
    echo -e "\n  1. DHCP\n  2. Static\n  3. Quit\n"
    read -p "  Choose a network configuration for management network: " -n1 choice

    case ${choice} in
        1)
            _linfo "\n\n"
            _linfo "${choice} selected. Proceeding with DHCP configuration for Management Network."
            set_mgmt_dhcp_config
            set_data_public_dhcp_config
            set_bmc_dhcp_config
            ;;
        2)
            _linfo "\n\n"
            _linfo "${choice} selected. Proceeding with Static IP configuration for Management Network."
            set_mgmt_static_config
            set_data_public_static_config
            set_bmc_static_config
            ;;
        3)
            _lerror "        "
            _lerror "        "
            _lerror "User decided to exit without selecting Network configuration."
            _lerror "Exiting..."
            exit 10
            ;;
        *)
            _lerror "        "
            _lerror "        "
            _lerror "${choice} selected."
            _lerror "Invalid option selected. Please try again. Exiting..."
            exit 11
            ;;
    esac
}


# Script entry point
choose_nw_config
