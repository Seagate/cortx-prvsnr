#!/bin/sh
# Functions in this file address following:
#   1. Stop rabbitmq cluster, if running
#   2. Ref: Stop and restart a RabbitMQ cluster, RMQ clustering 
#   3. Ensure Lnet service is stopped 
#   4. Collect system-wide support bundle using CSM CLI interface
#   5. Backup files 
#       a. /etc/multipath/bindings 
#       b. /etc/multipath.conf 
#   6. Unmount /var/mero and SWAP? (This should be ideally taken care of by OS shutdown)
#   7. Cleanup /tmp 
#   8. Create boxing flag file on primary node:
#       /opt/seagate/eos-prvsnr/generated_config/boxed
#       Creating file on only one node ensures that the unboxing is executed only on primary node.
set -euE

export LOG_FILE="${LOG_FILE:-/var/log/seagate/provisioner/boxing_prov_tasks.log}"
truncate -s 0 ${LOG_FILE}

function trap_handler {
  echo "For detailed error logs, please see: $LOG_FILE"
}
trap trap_handler ERR

function stop_rabbitmq_cluster {
    echo "INFO: Removing RabbitMQ from both nodes." | tee -a ${LOG_FILE}
    
    #salt "*" cmd.run "rabbitmqctl stop_app"
    salt "*" state.apply components.rabbitmq.teardown || (echo "ERROR: Remove RabbitMQ from both nodes failed." | tee -a ${LOG_FILE})

    echo "INFO: Removed RabbitMQ from both nodes." | tee -a ${LOG_FILE}
}

function stop_services {
    echo "INFO: Stop LNET from both nodes if active." | tee -a ${LOG_FILE}

    echo "Stopping lnet on both nodes"
    salt "*" service.stop lnet || (echo "ERROR: Failed to stop LNET from both nodes." | tee -a ${LOG_FILE})

    echo "INFO: Stopped LNET from both nodes if active." | tee -a ${LOG_FILE}
}

function backup_files {
    echo "INFO: Backing up files on both nodes." | tee -a ${LOG_FILE}

    bkp_file_list=(
        "/etc/multipath/bindings"
        "/etc/multipath.conf"
    )
    for file in "${bkp_file_list[@]}"; do cp $file $file.bak done

    echo "INFO: Backed up files on both nodes." | tee -a ${LOG_FILE}
}

function boxing_flag {
    #Flag file is created only on primary node,
    # as this helps to ensure unboxing is executed only on primary node.
    echo "INFO: Creating flag file on primary node." | tee -a ${LOG_FILE}

    local file_name="/opt/seagate/cortx/provisioner/generated_config/boxed"
    
    if [ ! -f $file_name ]
    then
        timestamp=$(date "+%Y.%m.%d-%H.%M.%S")
        mkdir -p $(dirname "$file_name")
        echo $timestamp > $file_name
    fi

    echo "INFO: Created flag file on primary node." | tee -a ${LOG_FILE}
}
