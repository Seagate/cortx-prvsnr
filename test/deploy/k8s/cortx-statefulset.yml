apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: podnode
  labels:
    app: cortx-provisioner
spec:
  serviceName: "cortx-provisioner"
  replicas: 1
  selector:
    matchLabels:
      app: cortx-provisioner
  template:
    metadata:
      labels:
        app: cortx-provisioner
    spec:
      volumes:
      - name: cortx-config
        persistentVolumeClaim:
          claimName: cortx-config-pvc
      - name: solution-config
        configMap:
          name: solution-config
      - name: cortx-secret
        secret:
          secretName: cortx-secret
      - name: podinfo
        downwardAPI:
          items:
          - path: "name"
            fieldRef:
              fieldPath: metadata.name
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app: cortx-provisioner
      containers:
      - name: cortx-provisioner
        image: cortx-provisioner:latest
        imagePullPolicy: IfNotPresent
        args:
        - /bin/sh
        - -c
        - set -x;
          export PATH=$PATH:/opt/seagate/cortx/provisioner/bin;
          CORTX_CONF=yaml:/etc/cortx/cluster.conf;
          cat /etc/cortx/solution/cluster.yaml | grep -A 1 `cat /etc/podinfo/name` | grep id | awk {'print $2'} > /etc/machine-id;
          cortx_setup config apply -f yaml:///etc/cortx/solution/config.yaml -o $CORTX_CONF;
          cortx_setup config apply -f yaml:///etc/cortx/solution/cluster.yaml -o $CORTX_CONF;
          echo -e "#!/bin/bash\necho $*" > /usr/bin/motr_setup;
          chmod +x /usr/bin/motr_setup;
          cp -pf /usr/bin/motr_setup /usr/bin/s3_setup;
          cp -pf /usr/bin/motr_setup /usr/bin/hare_setup;
          cp -pf /usr/bin/motr_setup /usr/bin/csm_setup;
          cortx_setup cluster bootstrap -f $CORTX_CONF;
          ls /etc/cortx;
          cat /etc/cortx/cluster.conf;
          ls -l /etc/cortx/solution;
          while true; do sleep 30; echo "Hello Kubernetes"; done;
        volumeMounts:
        - name: solution-config
          mountPath: /etc/cortx/solution
        - name: cortx-config
          mountPath: /etc/cortx
        - name: podinfo
          mountPath: /etc/podinfo
        - name: cortx-secret
          mountPath: /etc/cortx/solution/secret
