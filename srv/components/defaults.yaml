#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

tmp_dir: /tmp


# the following logic evaluates:
#   - release_repo: a repo of the product release
#   - 3rd party dependencies repositories:
#     - os repositories (optionally)
#     - commons_repo
#     - epel_repo
#     - saltstack_repo

{% set os_repos = [] %}
{% set target_build = pillar['release']['target_build'] %}
{% set deps_bundle_url = salt['pillar.get']('release:deps_bundle_url') %}
{% set release_repo = target_build %}

# for bundle release target_build is a base url of mounted repositories,
# might be local (file://) or remote (http(s)://)
{% if pillar['release']['type'] == 'bundle' %}
  # FIXME os repos for redhat with subscription disabled

  {% set base_bundle_url = target_build %}

  {% set release_repo = '/'.join([base_bundle_url, 'cortx_iso']) %}
  {% set deps_bundle_url = '/'.join([base_bundle_url, '3rd_party']) %}

{% elif not deps_bundle_url %}
  # deps bundle url implies that we follow new repo structure

  # LEGACY REPOS STRUCTURE

 {% set common_repo = '/'.join([target_build, '3rd_party']) %}

  {% set epel_repo = "http://ssc-satellite1.colo.seagate.com/pulp/repos/EOS/Library/custom/EPEL-7/EPEL-7/" %}
    # url: https://dl.fedoraproject.org/pub/epel/7/x86_64/
  {% set saltstack_repo = "https://repo.saltstack.com/py3/redhat/$releasever/$basearch/3002" %}

{% else %}
# FIXME might be unnecessary, added just because of some experience
#       that Jinja might fail for 'if/elif' if no final 'else' is pesented
{% endif %}

# bundled 3rd parties might be:
#   - a part of bundled release
#   - an standalone url where they mounted
{% if deps_bundle_url %}
  {% set epel_repo = '/'.join([deps_bundle_url, 'EPEL-7']) %}
  {% set saltstack_repo = '/'.join([deps_bundle_url, 'commons', 'saltstack-3002']) %}
  # {% set glusterfs_repo = '/'.join([deps_bundle_url, 'commons', 'glusterfs']) %}
  {% set commons_repo = deps_bundle_url %}
{% endif %}


# finally give env variables a chance
{% set commons_repo = salt["environ.get"]('CORTX_COMMONS', commons_repo) %}
{% set release_repo = salt["environ.get"]('REPO_URL', release_repo) %}
{% set epel_repo = salt["environ.get"]('EPEL', epel_repo) %}
{% set saltstack_repo = salt["environ.get"]('SALTSTACK', saltstack_repo) %}


base_repos:
  epel_repo:
    id: "epel"
    url: {{ epel_repo }}
  saltstack_repo:
    id: "saltstack"
    url: {{ saltstack_repo }}

commons:
  repo:
  # Binaries from external sources
    id: "cortx_commons"
    url: {{ commons_repo }}

sspl:
  repo:
    id: "sspl"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate
  uploads_repo:
  # Binaries from external sources
    id: "sspl_uploads"
    url: {{ commons_repo }}

lustre:
  repo:
    id: "lustre"
    url:
      tcp: {{ commons_repo }}/lustre/custom/tcp/
      o2ib: {{ commons_repo }}/lustre/custom/o2ib/

motr:
  repo:
    id: "motr"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate

hare:
  repo:
    id: "hare"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate

cortx_ha:
  repo:
    id: "cortx-ha"
    url: {{ release_repo }}

s3server:
  repo:
    id: "s3server"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate
  uploads_repo:
  # Binaries from external sources
    id: "s3server_uploads"
    url: {{ commons_repo }}
  config:
    DEPLOY_TAG: "s3dev"
    S3_VERSION: "1.0"
    S3_DOMAIN: "s3.seagate.com"

nfs:
  repo:
    id: "nfs"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate
  uploads_repo:
  # Binaries from external sources
    id: "nfs_uploads"
    url: {{ commons_repo }}

csm:
  repo:
    id: "csm"
    url: {{ release_repo  }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate
  uploads_repo:
    id: "csm_uploads"
    url: {{ commons_repo }}

uds:
  repo:
    id: "uds"
    url: {{ release_repo  }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate

provisioner:
  repo:
    id: "provisioner"
    url: {{ release_repo }}
    gpgkey: {{ release_repo }}/RPM-GPG-KEY-Seagate
